# 
# This is a configuration file for "p7z_usr.wcx" Double Commander (DCMD) plugin.
# Possible locations this file should be in:
#   1. same directory "p7z_usr.wcx" is in.
#   2. path specified by "P7ZUSRWCX_INI" enviroment variable.
# For settings to be updated, plugin must be restarted. Currently this
# can be done only by restarting DCMD.
#

# szCYHTFHandlersOff
#     7-zip handlers that are turned off durning Ctrl+PgDn (CanYouHandleThisFile()).
#     Comma separated list of handler names. Names: Cab, zip, 7z, Iso, ...
#     If not specified, default functionality disables the 'Cab' handler.
#     NOTE: "7z.so" ver 15.09 build for linux x86_64, stream-open function for Cab handler
#           freezes on an attempt to test any file, therefore should be disabled here.
#           >> What's new after 7-Zip 15.13:
#           >>   The BUG in 15.13 in CAB code was fixed.
#     Plugin prints all handlers it finds durning initialization with 
#     debug mode enabled.
#
szCYHTFHandlersOff = Cab,

# szCYHTFHandlersPriority
#     Handlers priority as comma separated list.
#     All remaining, not specified, are tried at the end, in their default order.
#
szCYHTFHandlersPriority = tar,Udf,Iso,

# uScanSize and uCYHTFScanSize
#     Scan size for all handlers that may expect it's headers at unknown position
#     thats not always at offset 0 in the file.
#     Experimenting with different values may save some time when 
#     intended to work only with a subset of formats that 7Z provides.
#     Default value taken from 7Z examples is 8MiB = 8388608.
#
uScanSize = 8000001
uCYHTFScanSize = 8000002

# bShowDebug
#     If set to 1, plugin will print various diagnosis messages to STDOUT.
#     This is equivalent to a P7ZUSRWCX_DEBUG=1 env variable.
#     Difference is that env var will show few messages more, durning plugin 
#     early initialization, that 'bShowDebug' won't.
#     If env var enables debug, this setting cannot be overriden.
#
bShowDebug = 1

# bDoAccessViolationOnCAErr
#     This is a workaround to indicate that error happened durning archive 
#     extract process. Related to plugin interface function CloseArchive().
#     Currently DCMD doesn't report any errors returned by the CloseArchive().
#     If this is set to 1, plugin will generate Access Violation error by
#     an arbitrary attempt of writing integer value at address 0.
#     Default: 1
#
bDoAccessViolationOnCAErr = 1

# szInputBoxSymbol and szMessageBoxSymbol
#     Symbol names of functions used for prompt dialog box and message box.
#     These are function names from inside 'doublecmd' executable.
#     Are allowed to be changed in case if they change in future DCMD version.
#     Otherwise plugin source code would need to be updated.
#
#szInputBoxSymbol = "FDIALOGBOX_INPUTBOX$PCHAR$PCHAR$LONGBOOL$PCHAR$LONGINT$$LONGBOOL"
#szMessageBoxSymbol = "FDIALOGBOX_MESSAGEBOX$PCHAR$PCHAR$LONGINT$$LONGINT"

# szArcOpenShellNotify
#     WARNING: This is an advanvced feature. Most commands, that would work 
#              normally in terminal otherwise, can cause freezes or crashes here.
#     Optional shell command on archive open.
#     Can be used for example to notify that P7Z Usr is being used to open the archive.
#     Command is executed thru system() function call.
#     Plugin code stops execution until system() returns.
#     Search-replace tags: {*handler_name*} {*arc_name*} {*wcx_dir*}
#     Examples:
#         szArcOpenShellNotify = "aplay /path/to/notify.wav 2>/dev/null &"
#         szArcOpenShellNotify = "xterm -e 'read -p Handler:{*handler_name*}...'"







