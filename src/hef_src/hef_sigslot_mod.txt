
The sigslot C++ Library
--------------------------------
	http://sigslot.sourceforge.net/
	....\apps_programming\libraries\sigslot C++ library
	"sigslot-1-0-0.tar.gz"

	The sigslot library implements a type-safe, 
	thread-safe signal/slot mechanism in C++. The library is implemented 
	entirely in C++, and does not require source code to be preprocessed1
	in order for it to be used.
	The sigslot library's home page is at http://sigslot.sourceforge.net/. 
	Look there first for the latest version of this paper, as well as up-to-date 
	downloads of the library itself.

NOTES #1
------------
* Errors with QT.
  if some QT headers (dont know which) are included before sigslot.h,
  there are compile errors inside sigslot.h.
  example:
  #include <QtGui/qapplication.h>
  #include <sigslot.h>

* using emit() method on signals causes conflicts with qt caused by 
  qt defining the word 'emit' as macro.
  f.e. sgDone.emit()
  Fix: renamed to emitf()

* In MSVC6 errors if assert.h is included before.

* class that inherit from sigslot::has_slots<> must not 
  be deleted durning call that is result of emiting signal with emitf() method.
  if using perform-like techniques with timeout-like message queueing, its best
  to delete that class by doing separate queued timeout with zero expire time.


NOTES #2
------------
	* renamed all functions from emit() to emitf().
	  reason: to prevent conflicts with QT 'emit' macro.
	  - QT is the one to blame for that...

	* for MSVC 7.x it was required to use defined SIGSLOT_PURE_ISO mode.
	  modified source code to make this default setting for MSVC 7.x.

	* 2016-01-18: moving header: "libs/sigslot_cpp_library/inc/sigslot_mod.h"
	  to "hex_editor_factory/src/hef_sigslot_mod.h"

	* 2016-01-18: added namespace 'hef' on top of 'sigslot' namespace.
	  ex: hef::sigslot::has_slots<>
